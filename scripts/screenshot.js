const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

async function takeScreenshot() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...');
  
  const browser = await puppeteer.launch({
    headless: 'new',
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  });
  
  const page = await browser.newPage();
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
  await page.setViewport({
    width: 1200,
    height: 800,
    deviceScaleFactor: 2 // –î–ª—è —á–µ—Ç–∫–æ—Å—Ç–∏
  });
  
  console.log('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—à–±–æ—Ä–¥...');
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
  await page.goto('https://bogachev11.github.io/french-challenge', {
    waitUntil: 'networkidle0',
    timeout: 60000
  });
  
  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤
  await page.waitForSelector('.recharts-cartesian-axis', { timeout: 30000 });
  
  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
  const screenshotsDir = path.join(__dirname, '..', 'screenshots');
  if (!fs.existsSync(screenshotsDir)) {
    fs.mkdirSync(screenshotsDir, { recursive: true });
  }
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å –¥–∞—Ç–æ–π
  const today = new Date().toISOString().split('T')[0];
  const screenshotPath = path.join(screenshotsDir, `dashboard_${today}.png`);
  
  console.log(`üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç: ${screenshotPath}`);
  
  // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
  await page.screenshot({
    path: screenshotPath,
    fullPage: true,
    type: 'png'
  });
  
  await browser.close();
  
  console.log('‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –≥–æ—Ç–æ–≤!');
  
  return screenshotPath;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  takeScreenshot().catch(console.error);
}

module.exports = takeScreenshot;
